{"version":3,"sources":["../src/app.js"],"names":["app","port","process","env","PORT","publicDirectoryPath","path","join","__dirname","viewsPath","partialsPath","set","hbs","registerPartials","use","express","get","req","res","render","title","name","img","helpText","query","address","send","error","latitude","longitude","location","forecastData","forecast","errorMessage","listen","console","log"],"mappings":"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","sourcesContent":["import path from 'path';\r\nimport express from 'express';\r\nimport hbs from 'hbs';\r\nimport {forecast} from './utils/forecast';\r\nimport {geocode} from './utils/geocode';\r\n\r\n\r\nconst app = express();\r\nconst port = process.env.PORT || 3000;\r\n\r\n// Define paths for express config\r\nconst publicDirectoryPath = path.join(__dirname, '../public');\r\nconst viewsPath = path.join(__dirname, '../templates/views');\r\nconst partialsPath = path.join(__dirname, '../templates/partials');\r\n\r\n// Setup HandlerBars engine and views location\r\napp.set('view engine', 'hbs');\r\napp.set('views', viewsPath);\r\nhbs.registerPartials(partialsPath);\r\n\r\n// setup static directory to serve\r\napp.use(express.static(publicDirectoryPath));\r\n\r\napp.get(\"\", (req, res) => {\r\n    res.render('index', {\r\n        title: \"Weather App\",\r\n        name: \"Divyansh Acharya\"\r\n    });\r\n});\r\n\r\napp.get(\"/about\", (req, res) => {\r\n    res.render('about', {\r\n        title: \"About Me\",\r\n        name: \"Divyansh Acharya\",\r\n        img: \"/img/profile-pic.jpg\"\r\n    });\r\n});\r\n\r\napp.get(\"/help\", (req, res) => {\r\n    res.render('help', {\r\n        title: \"Get Help Here\",\r\n        name: \"Divyansh Acharya\",\r\n        helpText: \"This page is for u to get help! \",\r\n    });\r\n});\r\n\r\napp.get(\"/weather\", (req, res) => {\r\n    if (!req.query.address) {\r\n        return res.send({\r\n            error: \"You must provide an Address\"\r\n        });\r\n    }\r\n    geocode(req.query.address, (error, {latitude, longitude, location} = {}) => {\r\n        if (error) {\r\n            return res.send({error});\r\n        }\r\n        forecast(latitude, longitude, (error, forecastData) => {\r\n            if (error) {\r\n                return res.send({error})\r\n            }\r\n            res.send({\r\n                forecast: forecastData,\r\n                location,\r\n                address: req.query.address\r\n            });\r\n        });\r\n    });\r\n});\r\n//\r\n// app.get(\"/products\", (req, res) => {\r\n//     if (!req.query.search) {\r\n//         return res.send({\r\n//             error: \"You must provide a search term\"\r\n//         });\r\n//     }\r\n// });\r\n\r\napp.get(\"/help/*\", (req, res) => {\r\n    res.render(\"404\", {\r\n        title: \"404\",\r\n        name: \"Divyansh Acharya\",\r\n        errorMessage: \"Help article not found\"\r\n    });\r\n});\r\n\r\napp.get(\"*\", (req, res) => {\r\n    res.render('404', {\r\n        title: \"404\",\r\n        name: \"Divyansh Acharya\",\r\n        errorMessage: \"Page not Found\"\r\n    });\r\n});\r\n\r\napp.listen(port, function () {\r\n    console.log(\"Server is running on localhost:3000\");\r\n});"],"file":"app.js"}